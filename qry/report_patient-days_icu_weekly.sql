WITH START_MONTH AS (
	SELECT DISTINCT
		DATE '2020-01-05' AS START_MONTH
	FROM
		DUAL
), ALL_UNITS AS (
	SELECT DISTINCT
		CODE_VALUE.CODE_VALUE AS LOC_NURSE_UNIT_CD,
		CODE_VALUE.DISPLAY AS NURSE_UNIT
	FROM
		CODE_VALUE
	WHERE
		CODE_VALUE.CODE_VALUE IN (
			4122, -- HH MICU
			4137, -- HH CCU
			5441, -- HH STIC
			5541, -- HH CVICU
			8667250, -- HH MIMU
			18116572, -- HH 8WJP
			283905037, -- HH 7J
			1993318732, -- HH HFIC
			2369096643, -- HH TSCU
			2041371668, -- HH NVIC
			3311213379, -- HH TICU
			3224987721, -- HH S STIC
			3224986803, -- HH S BURN
			3224988589, -- HH S SHIC
			3224988925, -- HH S TSIC
			3224989065, -- HH S TSCU
			277567038, -- HH VUHH
			277570335, -- HH EDHH
			277573736 -- HH EDTR
			
		)
), UNIT_ENCNTR_LIST AS (
	SELECT DISTINCT
		ENCNTR_LOC_HIST.ENCNTR_ID
	FROM
		ALL_UNITS,
		ENCNTR_LOC_HIST,
		START_MONTH
	WHERE
		ENCNTR_LOC_HIST.LOC_NURSE_UNIT_CD = ALL_UNITS.LOC_NURSE_UNIT_CD
		AND ENCNTR_LOC_HIST.TRANSACTION_DT_TM BETWEEN
			pi_to_gmt(START_MONTH.START_MONTH, pi_time_zone(2, @Variable('BOUSER')))
			AND pi_to_gmt(TRUNC(SYSDATE, 'DAY') - 1/86400, pi_time_zone(2, @Variable('BOUSER')))
), UNIT_TRNSFRS AS (
	SELECT DISTINCT
		ENCNTR_LOC_HIST.ENCNTR_LOC_HIST_ID AS ELH_ID,
		ENCNTR_LOC_HIST.LOC_NURSE_UNIT_CD,
		CASE
			WHEN 
				LAG(ENCNTR_LOC_HIST.LOC_NURSE_UNIT_CD, 1, 0) OVER (
					PARTITION BY ENCNTR_LOC_HIST.ENCNTR_ID 
					ORDER BY ENCNTR_LOC_HIST.ENCNTR_LOC_HIST_ID
				) <> ENCNTR_LOC_HIST.LOC_NURSE_UNIT_CD THEN 1
			WHEN
				LEAD(ENCNTR_LOC_HIST.LOC_NURSE_UNIT_CD, 1, 0) OVER (
					PARTITION BY ENCNTR_LOC_HIST.ENCNTR_ID 
					ORDER BY ENCNTR_LOC_HIST.ENCNTR_LOC_HIST_ID
				) <> ENCNTR_LOC_HIST.LOC_NURSE_UNIT_CD
				AND LAG(ENCNTR_LOC_HIST.LOC_NURSE_UNIT_CD, 1, 0) OVER (
					PARTITION BY ENCNTR_LOC_HIST.ENCNTR_ID 
					ORDER BY ENCNTR_LOC_HIST.ENCNTR_LOC_HIST_ID
				) = ENCNTR_LOC_HIST.LOC_NURSE_UNIT_CD THEN -1
			ELSE 0
		END AS UNIT_TRANSFER,
		CASE
			WHEN 
				LAG(ENCNTR_LOC_HIST.LOC_NURSE_UNIT_CD, 1, 0) OVER (
					PARTITION BY ENCNTR_LOC_HIST.ENCNTR_ID 
					ORDER BY ENCNTR_LOC_HIST.ENCNTR_LOC_HIST_ID
				) <> ENCNTR_LOC_HIST.LOC_NURSE_UNIT_CD THEN TRUNC(pi_from_gmt(ENCNTR_LOC_HIST.BEG_EFFECTIVE_DT_TM, (pi_time_zone(1, @Variable('BOUSER')))))
			WHEN
				LEAD(ENCNTR_LOC_HIST.LOC_NURSE_UNIT_CD, 1, 0) OVER (
					PARTITION BY ENCNTR_LOC_HIST.ENCNTR_ID 
					ORDER BY ENCNTR_LOC_HIST.ENCNTR_LOC_HIST_ID
				) <> ENCNTR_LOC_HIST.LOC_NURSE_UNIT_CD
				AND LAG(ENCNTR_LOC_HIST.LOC_NURSE_UNIT_CD, 1, 0) OVER (
					PARTITION BY ENCNTR_LOC_HIST.ENCNTR_ID 
					ORDER BY ENCNTR_LOC_HIST.ENCNTR_LOC_HIST_ID
				) = ENCNTR_LOC_HIST.LOC_NURSE_UNIT_CD THEN TRUNC(pi_from_gmt(ENCNTR_LOC_HIST.END_EFFECTIVE_DT_TM, (pi_time_zone(1, @Variable('BOUSER')))))
		END AS TRANSFER_DATE
	FROM
		ENCNTR_LOC_HIST,
		UNIT_ENCNTR_LIST
	WHERE
		UNIT_ENCNTR_LIST.ENCNTR_ID = ENCNTR_LOC_HIST.ENCNTR_ID
), UNIT_TRNSFRS_DAILY AS (
	SELECT DISTINCT
		UNIT_TRNSFRS.TRANSFER_DATE,
		UNIT_TRNSFRS.LOC_NURSE_UNIT_CD,
		SUM(UNIT_TRNSFRS.UNIT_TRANSFER) AS NET_TRANSFERS
	FROM
		ALL_UNITS,
		START_MONTH,
		UNIT_TRNSFRS
	WHERE
		UNIT_TRNSFRS.UNIT_TRANSFER <> 0
		AND UNIT_TRNSFRS.LOC_NURSE_UNIT_CD = ALL_UNITS.LOC_NURSE_UNIT_CD
		AND UNIT_TRNSFRS.TRANSFER_DATE BETWEEN pi_to_gmt(START_MONTH.START_MONTH, pi_time_zone(2, @Variable('BOUSER'))) AND pi_to_gmt(TRUNC(SYSDATE, 'DAY') - 1/86400, pi_time_zone(2, @Variable('BOUSER')))
	GROUP BY
		UNIT_TRNSFRS.TRANSFER_DATE,
		UNIT_TRNSFRS.LOC_NURSE_UNIT_CD
), CENSUS AS (
	SELECT DISTINCT
		TRUNC(pi_from_gmt(LH_CNT_LOC_UNIT_CENSUS.CENSUS_DT_TM, (pi_time_zone(1, @Variable('BOUSER'))))) AS CENSUS_DATE,
		LH_CNT_LOC_UNIT_CENSUS.LOC_NURSE_UNIT_CD,
		LH_CNT_LOC_UNIT_CENSUS.CENSUS_PERSON_TOTAL AS CENSUS
	FROM
		ALL_UNITS,
		LH_CNT_LOC_UNIT_CENSUS,
		START_MONTH
	WHERE
		LH_CNT_LOC_UNIT_CENSUS.LOC_NURSE_UNIT_CD = ALL_UNITS.LOC_NURSE_UNIT_CD
		AND LH_CNT_LOC_UNIT_CENSUS.CENSUS_DT_TM BETWEEN
			pi_to_gmt(START_MONTH.START_MONTH, pi_time_zone(2, @Variable('BOUSER')))
			AND pi_to_gmt(TRUNC(SYSDATE, 'DAY') - 1/86400, pi_time_zone(2, @Variable('BOUSER')))
), PATIENT_DAYS AS (
	SELECT
		CENSUS.CENSUS_DATE,
		CENSUS.LOC_NURSE_UNIT_CD,
		CENSUS.CENSUS,
		NVL(UNIT_TRNSFRS_DAILY.NET_TRANSFERS, 0) AS NET_TRANSFERS,
		CENSUS.CENSUS + NVL(UNIT_TRNSFRS_DAILY.NET_TRANSFERS, 0) AS PATIENT_DAYS
	FROM
		CENSUS,
		UNIT_TRNSFRS_DAILY
	WHERE 
		CENSUS.CENSUS_DATE = UNIT_TRNSFRS_DAILY.TRANSFER_DATE(+)
		AND CENSUS.LOC_NURSE_UNIT_CD = UNIT_TRNSFRS_DAILY.LOC_NURSE_UNIT_CD(+)
)

SELECT
	TRUNC(PATIENT_DAYS.CENSUS_DATE, 'DAY') AS CENSUS_WEEK,
	pi_get_cv_display(PATIENT_DAYS.LOC_NURSE_UNIT_CD) AS NURSE_UNIT,
	-- 'ICU' AS NURSE_UNIT,
	SUM(PATIENT_DAYS.PATIENT_DAYS) AS PATIENT_DAYS
FROM
	PATIENT_DAYS	
GROUP BY
	TRUNC(PATIENT_DAYS.CENSUS_DATE, 'DAY'),
	PATIENT_DAYS.LOC_NURSE_UNIT_CD
